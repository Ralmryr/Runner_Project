Index: src/Foe.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Foe.java b/src/Foe.java
new file mode 100644
--- /dev/null	(date 1635422979381)
+++ b/src/Foe.java	(date 1635422979381)
@@ -0,0 +1,14 @@
+public class Foe extends AnimatedThing{
+
+    public Foe(double x, double y){
+        super("C:\\Users\\Clément\\IdeaProjects\\RunnerProject\\img\\foes.png",
+                0.016,
+                1,
+                100,
+                80,
+                0,
+                0,
+                x,
+                y);
+    }
+}
Index: src/Hero.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Hero.java b/src/Hero.java
--- a/src/Hero.java	
+++ b/src/Hero.java	(date 1635427711189)
@@ -2,11 +2,22 @@
 
     private double[] prevState = {0, 0, 0, 0, 0, 0};
     private double jump;
+    private double gravity;
 
     public Hero(double x, double y){
-        super("C:\\Users\\Clément\\IdeaProjects\\RunnerProject\\img\\heros.png", 0.016, 6, 100, 80, 5, 20, x, y);
+        super("C:\\Users\\Clément\\IdeaProjects\\RunnerProject\\img\\heros.png",
+                0.016,
+                6,
+                100,
+                80,
+                5,
+                60,
+                x,
+                y);
         this.prevState[0] = super.getPosX();
-        this.prevState[1] = 100;
+        this.prevState[1] = 10000;
+        this.prevState[2] = super.getPosY();
+        this.gravity = 3000;
     }
 
     public void update(){
@@ -16,20 +27,25 @@
         double velocY = prevState[3]+super.getDurationBetweenFrames()*accelY;
         double posX = prevState[0]+super.getDurationBetweenFrames()*velocX;
         double posY = prevState[2]+super.getDurationBetweenFrames()*velocY;
-        if(posY>250) posY=250;
+        if(posY>250){
+            posY=250;
+            velocY = 0;
+        }
         prevState[0] = posX;
         prevState[1] = velocX;
         prevState[2] = posY;
         prevState[3] = velocY;
         prevState[4] = 10;
-        prevState[5] = 1000;
+        prevState[5] = this.gravity;
+        this.gravity = 3000;
         super.setPosX(posX);
         super.setPosY(posY);
-        super.update();
+        if(velocY==0 && posY==250) super.update(); // Sinon il y a une frame au max du saut ou la vitesse est nulle
+        else if(velocY>0) super.setViewport(calcViewPort(1, 1));
+        else super.setViewport(calcViewPort(0, 1));
     }
 
     public void jump(){
-        prevState[2] = 0;
-        System.out.println("Jump !");
+        if(prevState[2]==250) prevState[5] = -gravity*20; // Le heros doit être sur le sol avant de pouvoir sauter
     }
 }
Index: src/Camera.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Camera.java b/src/Camera.java
--- a/src/Camera.java	
+++ b/src/Camera.java	(date 1635420146126)
@@ -13,9 +13,9 @@
         this.y = y;
         prevState[0] = x;
         this.hero = hero;
-        this.k = 2;
-        this.f = 1.2;
+        this.f = 20;
         this.m = 1;
+        this.k = (f*f)/4; // Pour atteindre le régime critique du ressort
         timeBetweenUpdates = 0.016;
     }
 
@@ -28,16 +28,10 @@
         double accelX = (k/m)*(hero.getPosX()-300-prevState[0])-(f/m)*prevState[1];
         double velocX = prevState[1] + accelX*timeBetweenUpdates;
         double posX = prevState[0] + velocX*timeBetweenUpdates;
-//        double accelY = (k/m)*(hero.getY()-prevState[2])+(f/m)*prevState[3];
-//        double velocY = prevState[3] + accelY*timeBetweenUpdates;
-//        double posY = prevState[2] + velocY*timeBetweenUpdates;
         prevState[0] = posX;
         prevState[1] = velocX;
-        //prevState[2] = posY;
-        //prevState[3] = velocY;
 
         this.x = posX;
-        //this.y = posY;
     }
 
     public double getX() {
Index: src/GameScene.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/GameScene.java b/src/GameScene.java
--- a/src/GameScene.java	
+++ b/src/GameScene.java	(date 1635427056802)
@@ -2,35 +2,44 @@
 import javafx.scene.Parent;
 import javafx.scene.Scene;
 
+import java.util.ArrayList;
+
 public class GameScene extends Scene {
 
     private Camera camera;
     private StaticThing bgLeft, bgRight;
     private Hero hero;
+    private ArrayList<Foe> listOfFoes;
 
     public GameScene(Parent root) {
         super(root, 800, 400);
         String src = "C:\\Users\\Clément\\IdeaProjects\\RunnerProject\\img\\";
         this.bgLeft = new StaticThing(src+"desert.png");
         this.bgRight = new StaticThing(src + "desert.png");
-        this.hero = new Hero(300, 0);
+        this.hero = new Hero(300, 250);
         this.camera = new Camera(0, 0, this.hero);
+        this.listOfFoes = new ArrayList<>();
+        for(int i=2;i<50;i++){
+            this.listOfFoes.add(new Foe(1000*i, 250));
+        }
     }
 
-    public void displayCamera(){
+    public void update(){
         double camX = this.camera.getX();
-        double camY = this.camera.getY();
         double bgWidth = this.bgLeft.getImageWidth();
         this.bgLeft.setViewport(new Rectangle2D(camX % bgWidth, 0, bgWidth-camX % bgWidth, bgLeft.getImageHeight()));
         this.bgRight.setViewport(new Rectangle2D(0, 0,camX % bgWidth, bgRight.getImageHeight()));
         this.bgRight.setX(bgWidth-camX % bgWidth);
+
+        // Mise à jour de l'affichage du héros
         this.hero.setX(this.hero.getPosX()-this.camera.getX());
         this.hero.setY(this.hero.getPosY());
-    }
 
-    public void update(){
-        camera.update();
-        displayCamera();
+        // Mise à jour de l'affichage des ennemis
+        for (Foe foe : this.listOfFoes) {
+            foe.setX(foe.getPosX()-this.camera.getX());
+            foe.setY(foe.getPosY());
+        }
     }
 
     public StaticThing getBgLeft() {
@@ -48,4 +57,8 @@
     public Camera getCustomCamera(){
         return this.camera;
     }
+
+    public ArrayList<Foe> getListOfFoes() {
+        return listOfFoes;
+    }
 }
Index: src/HelloWorld.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/HelloWorld.java b/src/HelloWorld.java
--- a/src/HelloWorld.java	
+++ b/src/HelloWorld.java	(date 1635427743420)
@@ -32,6 +32,7 @@
                     }
                     if(time-prevTimeCamera>scene.getCustomCamera().getTimeBetweenUpdates()*1_000_000_000){
                         scene.getCustomCamera().update();
+                        System.out.println(scene.getCustomCamera().getY()+","+scene.getHero().getPosY());
                         prevTimeCamera = time;
                     }
                 scene.update();
Index: src/StaticThing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/StaticThing.java b/src/StaticThing.java
--- a/src/StaticThing.java	
+++ b/src/StaticThing.java	(date 1635426415786)
@@ -13,23 +13,6 @@
         this.setY(this.y);
     }
 
-    public StaticThing(String filePath, double posX, double posY){
-        super(filePath);
-        this.x = posX;
-        this.y = posY;
-        this.setX(this.x);
-        this.setY(this.y);
-    }
-
-    public StaticThing(String filePath, double posX, double posY, Rectangle2D crop){
-        super(filePath);
-        this.x = posX;
-        this.y = posY;
-        this.setViewport(crop);
-        this.setX(this.x);
-        this.setY(this.y);
-    }
-
     public double getImageHeight(){
         return this.getImage().getHeight();
     }
Index: src/AnimatedThing.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/AnimatedThing.java b/src/AnimatedThing.java
--- a/src/AnimatedThing.java	
+++ b/src/AnimatedThing.java	(date 1635427642839)
@@ -33,12 +33,22 @@
         setViewport(calcViewPort());
     }
 
-    private Rectangle2D calcViewPort(){
-        long minX = (animationIndex/6)*(spriteWidth + offsetBetweenFramesX) % ((long) animationMaxIndex *(spriteWidth + offsetBetweenFramesX));
-        long minY = (long) attitude *(spriteHeight+offsetBetweenFramesY);
+    public Rectangle2D calcViewPort(){
+        long minX = (animationIndex/5)*(spriteWidth + offsetBetweenFramesX) % ((long) animationMaxIndex*(spriteWidth + offsetBetweenFramesX));
+        long minY = (long) attitude*(spriteHeight+offsetBetweenFramesY);
         return new Rectangle2D(minX, minY, spriteWidth, spriteHeight);
     }
 
+    public Rectangle2D calcViewPort(int indexX, int indexY){
+        long minX = (long) (indexX)*(spriteWidth + offsetBetweenFramesX);
+        long minY = (long) (indexY)*(spriteHeight + offsetBetweenFramesY);
+        return new Rectangle2D(minX, minY, spriteWidth, spriteHeight);
+    }
+
+    public Rectangle2D getHitBox(){
+        return new Rectangle2D(posX+5, posY+5, spriteWidth-10, spriteHeight-10);
+    }
+
     public double getDurationBetweenFrames() {
         return durationbetweenframes;
     }
